# -*- coding: utf-8 -*-
"""Learning_2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I4SQ4xN7x_TD9NdAXOWVwsiShya9eZd9

**Variables**, **Expression**, **and** **Standards**


*   Fixes values such as numbers, letters, and Strings are called constants because their values does not change
*   String Constants use singles (') or (") double quotes.
"""

print("Hello Jitesh welcome back, Do well")

print(98*98*98*8)



"""****RESERVE WORDS****


**False, class, return, is, finally, None, if, for, lambda, continue, True, def, from, white, nonlocal, and, global, not, with, as elif, try, or, yield, assest, else, import, pass, break, except, in, raise**

****VARIABLES****


*   A variable is a named place in the memory where a programmer can store data later retrive the data using the variable "name"
*   Programmers get to choose the name of the variables

*   You can change the contents of a variable in a later statements
"""

x = 12.2
y = 14
print(x,y)

x = 144
y = 14
print(x,y)

"""> **Python variable Name rules**


1.   Must start with a letter or underscore_
2.   Must consists of a letters, numbers and underscores

1.   Case sensitive

**GOOD** : spam, eggs, spam23 _spam

**BAD** : 23spam,   #sign, var.12

**DIFFERENT** : Spam, spam, SPAM

##**ASSIGMENT STATEMENTS**

We assign a value to a variable using the assignment statements (=)

An assignments statements consists of an expression on the right hand side and a variable to store the results.
"""

x = 3.9*0.6*(1-0.6)
print(x)

"""##**Order of Evaluation**



1.   Parenthesis are always respected
2.   Exponentation( Raise to a power)

1.   Multiplication, Division and Remainder
2.   Addition & substraction

1.   Left to right








"""

inp = input('Write lift number of europe:')
usf = int(inp)+1
print('us floor', usf)

"""##**CONDITIONAL EXECUTION**
Boolean expressions ask a question and produce True or False


*   ">" less than
*   ">=" less than or equal to

*   "==" equal to

*   "<" greater than
*   "<=" greater than or equal to


*   "!=" Not equal

##**INDENTATION**


*   **Increase indent** indent after an if statement or for statement (after:)
*  **Maintain indent** to indicate the scope of the block(which lines are effected by the if/for)

*   **Reduce indent** back to the level of the if statement or for statement to indicate the end of the block
*   **Blank lines** are ignored- they do not affect identation

*   **Comments** on a line by themselves are ignored with regard to identation
"""

inp = int(input("enter an integer"))
x = inp
if x==5:
  print(x)
elif x<5:
  print(x,'is less than 5')
else:
  print(x, 'is greater than 5')

